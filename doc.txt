1. Компоненты бота:
    - Собственно бот - хэндлеры и функции регистрации хэндлеров, а также сборка клавиатуры (keyboard_builder)
    - Модуль API (Wialon и Navixy) - функции получения токенов, авторизации, поиска, создания сущностей
    - Модуль связи с БД MySQL - storage.py (класс Storage и методы взаимодействия с сервером)
    - Таск шедулер - для актуализации таблиц с Клиентами

2. Таблицы баз данных:
    - tg_bot_storage
        'user_id',
        'user_name',
        'chat_id',
        'state',
        'phone',
        'device_id',
        'hw_id',
        'client_sys_id',
        'client_platform' - stavros, stavros2, navixy
    - smt_clients
        'sys_client_id',
        'crm_client_id,
        'platform'
    - smt_hw_types
        'id_pk',
        'id',
        'name',
        'tp',
        'up',
        'objects_count',
        'platform' - wialon или navixy

3. Стэйты
    S_START = "0" - главное меню выбора
    S_ENTER_DEVICE_ID = "1" - ввод сообщения с ID оборудования
    S_ENTER_ACCOUNT_ID = "2" - ввод сообщения с ID Клиента
    S_GET_CONTACT = "3" - отправка контакта с клавиатуры (которая не инлайн)
    S_GET_PHOTO = "4" - пока не используется, для распознавания ID либо баркода

4. Схема работы:
    1) Модуль - app.handlers.message_start, app.handlers.callback_start, app.dbworker
    Пользователь отправляет команду "/start" и в ответ получает сообщение с инлайн-клавиатурой с тремя кнопками:
        - Проверка оборудования
        - Инструкции
        - Запрос в ТП
    При этом параллельно пользователю присваивается состояние "1", в котором просто фиксируется сам факт того, что слушаются события с кнопок.
    На само состояние "1" никакого хэндлера нет.

    2) Модуль app.handlers.callback_check_device
    Нажимая кнопку "Проверка оборудования", пользователь переходит к состоянию ввода ID устройства. Валидация стоит только на то, 
    чтобы текст сообщения был цифровым. 

    3) Модуль app.api.navixy.get_object_info и app.api.wialon.get_object_info
    Бот, получив сообщение от пользователя, отправляет поочередно два запроса на поиск элемента: к API Navixy и Wialon.
    При нахождении объекта в одной из платформ бот отсылает сообщение с данными о местоположении и текущем состоянии устройства.
    Процесс завершается нажатием на кнопку "Готово".

    4) Модуль app.check_client_id
    Если элемент с введенным ID не найден ни в одной системе, то пользователю предлагается ввести ID Клиента. Валидация по ID при этом не
    производится. 

    5) Модуль app.check_client_id, app.api.navixy.create_user
    После введения ID Клиента бот идет в базу данных и ищет в служебной таблице Клиента с таким ID. Если такого ID не найдено, бот
    отсылает сообщение о создании учетной записи в Navixy и отправляет соотвествующий запрос.

    6) Модуль app.keyboard_builder
    После этих действий бот идет в базу данных и собирает клавиатуру с типами устройств в зависимости от того, какая система 
    мониторинга выбрана для создания объекта.
    
    7) Модуль app.handlers.callback_create_object
    При выборе одного из типов устройств вызывается функция создания объекта, использующая информацию, заполненную на предыдущих этапах.
    